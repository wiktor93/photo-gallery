{"version":3,"sources":["assets/initialImageArray.js","components/AddImagePanel.js","styles/styledMixins.js","components/ModalCloseButton.js","components/ImageContainer.js","utils/getLastMovableThumbIndex.js","utils/useCheckScreenWidth.js","components/Slider.js","components/App.js","index.js"],"names":["initialImageArray","StyledAddImgPanel","styled","div","AddImagePanel","inputValue","setInputValue","images","setImages","TextField","id","label","variant","value","onChange","e","target","Button","size","onClick","imageContainerFullScreen","css","StyledCloseButton","fullScreen","ModalCloseButton","setFullScreen","fontSize","StyledImageContainer","ImageContainer","image","imgIndex","useState","handleModalClose","keyCode","useEffect","window","addEventListener","removeEventListener","src","alt","getLastMovableThumbIndex","array","selectedIndex","maxIndex","length","useCheckMobileScreen","breakPoint","innerWidth","isScreenMobile","setIsScreenMobile","checkScreenWidth","SliderWraper","ThumbnailsContainer","thumbnailsToMove","Slider","props","selectedImgIndex","setSelectedImgIndex","useCheckScreenWidth","handleImageChange","action","index","className","map","i","key","SyledWraper","App","handleKeyboardControls","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e0edf8b.chunk.js","sourcesContent":["const initialImageArray = [\r\n  'https://images.unsplash.com/photo-1501785888041-af3ef285b470?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80',\r\n  'https://images.unsplash.com/photo-1446488547543-78c11468449a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1349&q=80',\r\n  'https://images.unsplash.com/photo-1504700610630-ac6aba3536d3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\r\n  // 'https://images.unsplash.com/photo-1540206395-68808572332f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=562&q=80',\r\n  // 'https://images.unsplash.com/photo-1543840980-2fa72c525e9b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=813&q=80',\r\n  // 'https://images.unsplash.com/photo-1587392582839-74ebb1ab5f7b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=838&q=80',\r\n  // 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80',\r\n  // 'https://images.unsplash.com/photo-1504700610630-ac6aba3536d3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80',\r\n  // 'https://images.unsplash.com/photo-1540206395-68808572332f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=562&q=80',\r\n  // 'https://images.unsplash.com/photo-1446488547543-78c11468449a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1349&q=80',\r\n  // 'https://images.unsplash.com/photo-1543840980-2fa72c525e9b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=813&q=80',\r\n  // 'https://images.unsplash.com/photo-1587392582839-74ebb1ab5f7b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=838&q=80',\r\n];\r\n\r\nexport default initialImageArray;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {TextField, Button} from '@material-ui/core';\r\n\r\nconst StyledAddImgPanel = styled.div`\r\n  margin-top: 25px;\r\n  button {\r\n    font-size: inherit;\r\n    margin-left: 15px;\r\n    height: 56px;\r\n    text-transform: capitalize;\r\n    color: rgba(0, 0, 0, 0.6);\r\n  }\r\n`;\r\n\r\nfunction AddImagePanel({inputValue, setInputValue, images, setImages}) {\r\n  function handleAddImage() {\r\n    if (inputValue) {\r\n      setImages([...images, inputValue]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledAddImgPanel>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Adres URL zdjęcia\"\r\n        variant=\"outlined\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n      />\r\n      <Button variant=\"outlined\" size=\"large\" onClick={handleAddImage}>\r\n        Dodaj\r\n      </Button>\r\n    </StyledAddImgPanel>\r\n  );\r\n}\r\nexport default AddImagePanel;\r\n","import {css} from 'styled-components';\r\n\r\nexport const imageContainerFullScreen = css`\r\n  position: absolute;\r\n  margin: 0;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n  z-index: 10;\r\n  background-color: #fff;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst StyledCloseButton = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100px;\r\n  width: 100px;\r\n  padding: 10px;\r\n  display: ${({fullScreen}) => (fullScreen ? 'flex' : 'none')};\r\n  justify-content: flex-end;\r\n  background: linear-gradient(45deg, transparent 50%, black 50%);\r\n\r\n  svg {\r\n    fill: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction ModalCloseButton({fullScreen, setFullScreen}) {\r\n  return (\r\n    <StyledCloseButton fullScreen={fullScreen}>\r\n      <CloseIcon fontSize=\"large\" onClick={() => setFullScreen(false)} />\r\n    </StyledCloseButton>\r\n  );\r\n}\r\nexport default ModalCloseButton;\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {imageContainerFullScreen} from '../styles/styledMixins';\r\nimport ModalCloseButton from './ModalCloseButton';\r\n\r\nconst StyledImageContainer = styled.div`\r\n  margin: 25px 0;\r\n  height: 60vh;\r\n  min-height: 300px;\r\n  max-height: 640px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  ${({fullScreen}) => (fullScreen ? imageContainerFullScreen : null)}\r\n  img {\r\n    max-height: 100%;\r\n    max-width: 100%;\r\n    object-fit: scale-down;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction ImageContainer({image, imgIndex}) {\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n\r\n  function handleModalClose({keyCode}) {\r\n    if (keyCode === 27 && fullScreen) setFullScreen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleModalClose);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleModalClose);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [fullScreen]);\r\n\r\n  return (\r\n    <StyledImageContainer fullScreen={fullScreen}>\r\n      <img\r\n        src={image}\r\n        alt={`Zdjęcie nr ${imgIndex} `}\r\n        onClick={() => setFullScreen(!fullScreen)}\r\n      />\r\n      <ModalCloseButton fullScreen={fullScreen} setFullScreen={setFullScreen} />\r\n    </StyledImageContainer>\r\n  );\r\n}\r\nexport default ImageContainer;\r\n","function getLastMovableThumbIndex(array, selectedIndex) {\r\n  const maxIndex = array.length - 5;\r\n\r\n  if (array.length <= 5) return 0;\r\n\r\n  if (selectedIndex <= maxIndex) return selectedIndex;\r\n  else return maxIndex;\r\n}\r\nexport default getLastMovableThumbIndex;\r\n","import {useState, useEffect} from 'react';\r\n\r\nfunction useCheckMobileScreen(breakPoint = 768) {\r\n  const [isScreenMobile, setIsScreenMobile] = useState(\r\n    window.innerWidth >= breakPoint ? false : true\r\n  );\r\n\r\n  function checkScreenWidth() {\r\n    return window.innerWidth >= breakPoint\r\n      ? setIsScreenMobile(false)\r\n      : setIsScreenMobile(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', checkScreenWidth);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return isScreenMobile;\r\n}\r\n\r\nexport default useCheckMobileScreen;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport getLastMovableThumbIndex from '../utils/getLastMovableThumbIndex';\r\nimport useCheckScreenWidth from '../utils/useCheckScreenWidth';\r\n\r\nconst SliderWraper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 75px;\r\n  svg {\r\n    margin: 5px;\r\n    height: 24px;\r\n    align-self: center;\r\n    cursor: pointer;\r\n  }\r\n  .disabled {\r\n    fill: rgba(0, 0, 0, 0.3);\r\n    cursor: auto;\r\n  }\r\n`;\r\nconst ThumbnailsContainer = styled.div`\r\n  height: 100%;\r\n  max-width: 500px;\r\n  overflow-x: hidden;\r\n  div {\r\n    display: flex;\r\n    height: 100%;\r\n    transform: ${({thumbnailsToMove}) =>\r\n      `translateX(-${thumbnailsToMove * 100}px)`};\r\n    transition: 0.3s ease;\r\n  }\r\n  picture {\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    &::before {\r\n      opacity: 0;\r\n      content: '';\r\n      position: absolute;\r\n      left: 1px;\r\n      right: 1px;\r\n      top: 0;\r\n      height: 2px;\r\n      background-color: black;\r\n      transition: 0.3s;\r\n    }\r\n    &.active::before {\r\n      opacity: 1;\r\n    }\r\n    &:hover::before {\r\n      opacity: 1;\r\n    }\r\n\r\n    img {\r\n      padding: 0 1px;\r\n      width: 100px;\r\n      height: 75px;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Slider(props) {\r\n  const {images, selectedImgIndex, setSelectedImgIndex} = props;\r\n  const thumbnailsToMove = getLastMovableThumbIndex(images, selectedImgIndex);\r\n  const isScreenMobile = useCheckScreenWidth();\r\n\r\n  function handleImageChange(action, index) {\r\n    if (action === 'forward' && selectedImgIndex < images.length - 1) {\r\n      setSelectedImgIndex(selectedImgIndex + 1);\r\n    }\r\n    if (action === 'backward' && selectedImgIndex > 0) {\r\n      setSelectedImgIndex(selectedImgIndex - 1);\r\n    }\r\n    if (action === 'pick') setSelectedImgIndex(index);\r\n  }\r\n  return (\r\n    <SliderWraper>\r\n      <ArrowBackIosIcon\r\n        className={selectedImgIndex ? null : 'disabled'}\r\n        onClick={() => handleImageChange('backward')}\r\n      />\r\n      {isScreenMobile ? (\r\n        <div>{`${selectedImgIndex + 1} z ${images.length}`}</div>\r\n      ) : (\r\n        <ThumbnailsContainer thumbnailsToMove={thumbnailsToMove}>\r\n          <div>\r\n            {images.map((image, i) => (\r\n              <picture\r\n                key={i}\r\n                className={selectedImgIndex === i ? 'active' : null}\r\n              >\r\n                <img\r\n                  src={image}\r\n                  alt={`Zdjęcie nr ${i} `}\r\n                  onClick={() => handleImageChange('pick', i)}\r\n                />\r\n              </picture>\r\n            ))}\r\n          </div>\r\n        </ThumbnailsContainer>\r\n      )}\r\n\r\n      <ArrowForwardIosIcon\r\n        className={selectedImgIndex === images.length - 1 ? 'disabled' : null}\r\n        onClick={() => handleImageChange('forward')}\r\n      />\r\n    </SliderWraper>\r\n  );\r\n}\r\nexport default Slider;\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport initialImageArray from '../assets/initialImageArray';\r\nimport AddImagePanel from './AddImagePanel';\r\nimport ImageContainer from './ImageContainer';\r\nimport Slider from './Slider';\r\n\r\nconst SyledWraper = styled.div`\r\n  padding: 25px 2.5%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nfunction App() {\r\n  const [selectedImgIndex, setSelectedImgIndex] = useState(0);\r\n  const [images, setImages] = useState(initialImageArray);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  function handleKeyboardControls({keyCode}) {\r\n    if (keyCode === 39 && selectedImgIndex < images.length - 1) {\r\n      setSelectedImgIndex(selectedImgIndex + 1);\r\n    }\r\n    if (keyCode === 37 && selectedImgIndex > 0) {\r\n      setSelectedImgIndex(selectedImgIndex - 1);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyboardControls);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyboardControls);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [selectedImgIndex]);\r\n\r\n  return (\r\n    <SyledWraper>\r\n      <h1>Simple Photo Gallery</h1>\r\n\r\n      <AddImagePanel\r\n        images={images}\r\n        setImages={setImages}\r\n        inputValue={inputValue}\r\n        setInputValue={setInputValue}\r\n      />\r\n\r\n      <ImageContainer\r\n        image={images[selectedImgIndex]}\r\n        imgIndex={selectedImgIndex}\r\n      />\r\n\r\n      <Slider\r\n        images={images}\r\n        selectedImgIndex={selectedImgIndex}\r\n        setSelectedImgIndex={setSelectedImgIndex}\r\n      />\r\n    </SyledWraper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './styles/global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}